{"version":3,"sources":["webpack:///./_batfish_tmp/_unl-map-js-docs_api_handlers.js","webpack:///./docs/util/linker.js","webpack:///./docs/util/api-filter-items.js","webpack:///./docs/components/api/github.js","webpack:///./docs/components/api/section-heading.js","webpack:///./docs/util/formatters.js","webpack:///./docs/components/api/item-member.js","webpack:///./docs/components/api/title.js","webpack:///./docs/components/api/section-wrapper.js","webpack:///./docs/components/api/members-list.js","webpack:///./docs/util/search-members.js","webpack:///./docs/components/api/augments.js","webpack:///./docs/components/api/class-name.js","webpack:///./docs/components/api/parameters.js","webpack:///./docs/components/api/properties.js","webpack:///./docs/components/api/returns.js","webpack:///./docs/components/api/throws.js","webpack:///./docs/components/api/examples.js","webpack:///./docs/components/api/related.js","webpack:///./docs/util/empty.js","webpack:///./docs/components/api/item-contents.js","webpack:///./docs/components/api/item.js","webpack:///./docs/components/api/api-page-items.js","webpack:///./docs/components/api/page-wrapper.js","webpack:///./docs/pages/api/handlers.js","webpack:///./docs/components/copyable.js"],"names":["Page","require","default","module","exports","component","props","findPage","GithubSlugger","linker","namespace","page","path","indexOf","toLowerCase","slugger","nv","split","map","v","slug","join","docs","pageName","filter","doc","name","React","Component","SectionHeading","this","section","headingLevel","HeadingLevel","Fragment","className","id","href","linkerStack","LinkerStack","namespaceResolver","formatters","createFormatters","link","toHtml","ast","inline","children","length","type","concat","slice","dangerouslySetInnerHTML","__html","markdown","formatType","ApiItemMember","m","state","disclosed","hashChange","bind","member","aria-expanded","classnames","onClick","e","setState","history","pushState","location","hash","preventDefault","style","fontSize","lineHeight","fontWeight","kind","color","parameters","size","nested","window","prevProps","closeAll","addEventListener","removeEventListener","Title","SectionWrapper","title","titleComponent","MembersList","value","clearHash","pathname","members","filteredMembers","arr","search","Array","isArray","fuse","Fuse","keys","threshold","result","item","searchMembers","xlinkHref","themeControlInput","themeLabel","label","placeholder","onChange","filterMembers","i","key","Augments","augments","tag","autolink","ClassName","Parameters","params","param","description","properties","width","borderTopLeftRadius","borderTopRightRadius","property","wordBreak","Properties","Returns","returns","Throws","throws","Examples","examples","example","caption","lang","Related","sees","see","empty","ApiItemContents","membersList","interface","constructorComment","access","static","instance","events","ApiItem","apiFilterItems","ApiPageItems","pageDocSource","child","renderDescription","renderItems","Section","SingleSection","Api","frontMatter","hideFeedback","Copyable","highlight","html","highlightHtml","markup","javascript","highlightJsx","maxHeight","code","highlighter"],"mappings":"iFACM,IAAIA,EAAOC,EAAQ,QACnBD,EAAOA,EAAKE,SAAWF,EACvBG,EAAOC,QAAU,CACfC,UAAWL,EACXM,MAAO,CACb,YAAe,CACb,MAAS,4BACT,YAAe,uIACf,YAAe,MACf,MAAS,EACT,OAAU,OACV,SAAY,CACV,cAEF,SAAY,CACV,kB,uBChBN,IAAQC,EAAaN,EAAQ,QAArBM,SACFC,EAAgBP,EAAQ,QAe9BE,EAAOC,QAAU,CACfK,OAdF,SAAgBC,GACd,IAAMC,EAAOJ,EAASG,GAChBE,EAAOD,EAAI,+BAA2BA,EAA3B,KAAqC,GACtD,GAAID,EAAUG,QAAQ,MAAQ,EAC5B,MAAM,GAAN,OAAUD,EAAV,YAAkBF,EAAUI,eAE5B,IAAMC,EAAU,IAAIP,EAEdQ,EADQN,EAAUO,MAAM,KACbC,KAAI,SAACC,GAAD,iBAAWJ,EAAQK,KAAKD,OAAME,KAAK,IACxD,MAAM,GAAN,OAAUT,GAAV,OAAiBI,M,qBCZrB,IAAMM,EAAOrB,EAAQ,QAErBE,EAAOC,QAAU,SAACmB,GAAD,OAAcD,EAAKE,QAAO,SAACC,GAAD,OAASA,EAAIC,OAASH,O,wjDCE7BI,IAAMC,U,67CCArBC,E,kZACnB,WACE,MAAkCC,KAAKxB,MAA/ByB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aACXC,EAAY,WAAOD,GACzB,OACE,kBAAC,IAAME,SAAP,KACE,kBAACD,EAAD,CACEE,UAAU,kCACVC,GAAIL,EAAQrB,UAAUI,eAEtB,uBACEqB,UAAU,8BACVE,KAAI,WAAMN,EAAQrB,UAAUI,gBAE3BiB,EAAQL,a,iFAduBC,IAAMC,W,sDCE1CnB,EAAWR,EAAQ,QAAnBQ,OAEF6B,EAAc,IAAIC,IAAY,IAAIC,kBAAkBlB,GAAM,SAACZ,GAC7D,OAAOD,EAAOC,MAGL+B,EAAaC,IAAiBJ,EAAYK,MAGhD,SAASC,EAAOC,EAAKC,GAYxB,OAVIA,GACAD,GACAA,EAAIE,SAASC,QACY,cAAzBH,EAAIE,SAAS,GAAGE,OAEhBJ,EAAM,CACFI,KAAM,OACNF,SAAUF,EAAIE,SAAS,GAAGA,SAASG,OAAOL,EAAIE,SAASI,MAAM,MAIjE,0BACIC,wBAAyB,CACrBC,OAAO,GAAD,OAAKZ,EAAWa,SAAST,OAOxC,SAASU,EAAWN,GACvB,OACI,0BACIG,wBAAyB,CAAEC,OAAO,GAAD,OAAKZ,EAAWQ,KAAKA,O,mnDC6FnDO,E,yTA7HX,WAAYlD,GAAQ,IAAD,E,MAAA,O,4FAAA,SACf,cAAMA,G,EADS,K,EAMZ,SAACmD,GAAD,iBAAWA,EAAE/C,UAAUI,iB,EANX,U,wFAEf,EAAK4C,MAAQ,CAAEC,WAAW,GAC1B,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,MAHH,E,mCAQnB,WAAU,IAAD,OACCC,EAAShC,KAAKxB,MAEd2B,EAAY,WAAOH,KAAKxB,MAAM0B,cACpC,OACI,yBACIG,UAAU,sEACVC,GAAI0B,EAAOpD,UAAUI,cACrBiD,gBAAejC,KAAK4B,MAAMC,WAE1B,kBAAC,IAAMzB,SAAP,KACI,4BACIC,UAAW6B,IACP,qDACA,CACI,WAAYlC,KAAK4B,MAAMC,YAG/BM,QAAS,SAACC,GACN,EAAKC,SAAS,CAAER,WAAY,EAAKD,MAAMC,YACnCS,QAAQC,UACRD,QAAQC,UACJ,KACA,KACA,EAAKhC,KAAKyB,IAGdQ,SAASC,KAAO,EAAKlC,KAAKyB,GAG9BI,EAAEM,mBAGN,kBAACvC,EAAD,CACIwC,MAAO,CACHC,SAAU,OACVC,WAAY,OACZC,WAAY,WAEhBzC,UAAU,0CAET2B,EAAOpC,MAEK,aAAhBoC,EAAOe,MACJ,0BACI1C,UAAU,WACVsC,MAAO,CACHK,MAAO,WAEX1B,wBAAyB,CACrBC,OAAO,GAAD,OAAKZ,EAAWsC,WAClBjB,GACA,OAKhB,yBAAK3B,UAAU,MACX,kBAAC,IAAD,CACI6C,KAAM,GACNtD,KACII,KAAK4B,MAAMC,UACL,aACA,cAEVb,QAAQ,OAMvBhB,KAAK4B,MAAMC,WACR,yBAAKxB,UAAU,2EACX,kBAAC,GAAD,GACI8C,QAAQ,EACRX,SAAUxC,KAAKxB,MAAMgE,UACjBR,Q,wBAQ5B,WACQoB,OAAOZ,SAASC,OAASzC,KAAKO,KAAKP,KAAKxB,QACxCwB,KAAKqC,SAAS,CAAER,WAAW,M,gCAInC,SAAmBwB,GACXA,EAAUC,WAAatD,KAAKxB,MAAM8E,UAC9BtD,KAAKxB,MAAM8E,UAAYtD,KAAK4B,MAAMC,WAClC7B,KAAKqC,SAAS,CAAER,WAAW,M,+BAKvC,WACIuB,OAAOG,iBAAiB,aAAcvD,KAAK8B,YAC3C9B,KAAK8B,e,kCAGT,WACIsB,OAAOI,oBAAoB,aAAcxD,KAAK8B,iB,iFAjH1BjC,IAAMC,W,s9CCHb2D,G,kZACjB,WACI,MAA4CzD,KAAKxB,MAAzCyC,EAAR,EAAQA,SAAUhB,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,aACrBT,EACFQ,GAA4B,cAAjBA,EAAQL,KAAuB,MAAQK,EAAQL,KACxDU,EAAKhB,IAAK,GAAD,OAAIG,GAAY,GAAhB,YAAsBwB,IAC/Bd,EAAY,WAAOD,GAEzB,OACI,kBAACC,EAAD,CAAcG,GAAIA,EAAID,UAAU,iCAC5B,uBACIA,UAAU,6CACVE,KAAI,WAAMD,IAETW,S,iFAdcpB,IAAMC,W,28CCApB4D,G,qZACjB,WACI,MAMI1D,KAAKxB,MALLyC,EADJ,EACIA,SACAf,EAFJ,EAEIA,aACAD,EAHJ,EAGIA,QACA0D,EAJJ,EAIIA,MACAC,EALJ,EAKIA,eAEJ,OACI,kBAAC,IAAMxD,SAAP,KACKuD,GACG,kBAAC,GAAD,CAAOzD,aAAcA,EAAcD,QAASA,GACvC0D,GAGRC,GAAkC,GAClC3C,Q,mFAjB2BpB,IAAMC,W,ovDCI7B+D,G,2TACjB,WAAYrF,GAAQ,IAAD,S,4FAAA,eACf,cAAMA,IADS,iBAMH,SAACsF,GACb,EAAKzB,SAAS,CAAE3C,OAAQoE,EAAOR,UAAU,IAAQ,WAC7C,EAAKjB,SAAS,CAAEiB,UAAU,OAE9B,EAAKS,eAVU,sBAcP,WACJzB,QAAQC,WAAaa,QACrBd,QAAQC,UAAU,KAAM,KAAMa,OAAOZ,SAASwB,aAdlD,EAAKpC,MAAQ,CAAElC,OAAQ,GAAI4D,UAAU,GAFtB,E,mCAoBnB,WAAU,IAAD,OACL,EAA2BtD,KAAKxB,MAAxBmF,EAAR,EAAQA,MAAOM,EAAf,EAAeA,QACPvE,EAAWM,KAAK4B,MAAhBlC,OACFwE,EAAkBxE,EC7BzB,SAAuByE,EAAKC,GAC/B,IAAKA,IAAWD,IAAQE,MAAMC,QAAQH,GAAM,MAAO,GACnD,IAAMI,EAAO,IAAIC,KAAKL,EAAK,CACvBM,KAAM,CAAC,OAAQ,uCACfC,UAAW,KAEf,OAAOH,EAAKH,OAAOA,GACbG,EAAKH,OAAOA,GAAQhF,KAAI,SAACuF,GAAD,OAAYA,EAAOC,QAC3C,GDsBIC,CAAcZ,EAASvE,GACvBuE,EAEN,OACI,kBAAC,GAAD,IAAgBN,MAAOA,GAAW3D,KAAKxB,OAClCyF,EAAQ/C,OAAS,GACd,yBAAKb,UAAU,YACX,yBAAKA,UAAU,8FACX,yBAAKA,UAAU,QACX,yBAAKyE,UAAU,mBAGvB,kBAAC,KAAD,CACIC,kBAAkB,aAClBzE,GAAE,iBAAYhB,IAAKU,KAAKxB,MAAMyB,QAAQL,MAApC,YAA6CN,IAC3CqE,IAEJqB,WAAW,gBACXC,MAAK,iBAAYtB,GACjBuB,YAAW,iBAAYvB,GACvBwB,SAAUnF,KAAKoF,cACftB,MAAOpE,KAIlBA,GACG,yBAAKW,UAAU,wBAAf,SACW6D,EAAgBhD,OAD3B,IACoCyC,EADpC,OAC+C,IAC3C,8BAAOjE,GACP,4BACIW,UAAU,uCACV8B,QAAS,kBAAM,EAAKiD,cAAc,MAFtC,iBASPlB,EAAgB9E,KAAI,SAAC4C,EAAQqD,GAAT,OACjB,kBAAC,EAAD,IACI/B,SAAU,EAAK1B,MAAM0B,UACjB,EAAK9E,MAFb,CAGI8G,IAAKD,GACDrD,EAJR,CAKI9B,aAAc,EAAK1B,MAAM0B,aAAe,c,mFArEvBL,IAAMC,W,28CEJ1ByF,G,qZACjB,WACI,IAAQtF,EAAYD,KAAKxB,MAAjByB,QACR,OACI,yBAAKI,UAAU,QAAf,UACY,IACPJ,EAAQuF,SAASpG,KAAI,SAACqG,EAAKJ,GAAN,OAClB,0BACIC,IAAKD,EACL/D,wBAAyB,CACrBC,OAAO,GAAD,OAAKZ,EAAW+E,SAASD,EAAI7F,aANnD,U,mFAJ0BC,IAAMC,W,28CCAvB6F,G,qZACjB,WACI,IAAQ1F,EAAYD,KAAKxB,MAAjByB,QACR,OACI,yBACII,UAAU,gCACViB,wBAAyB,CACrBC,OAAO,yEAAD,OACFtB,EAAQL,KADN,kBAEIe,EAAWsC,WAAWhD,Y,mFATbJ,IAAMC,W,grDCCxB8F,G,qZACjB,WACI,IAAQ3F,EAAYD,KAAKxB,MAAjByB,QACR,OACI,kBAAC,GAAD,IAAgB0D,MAAM,cAAiB3D,KAAKxB,OACvCyB,EAAQ4F,OAAOzG,KAAI,SAAC0G,EAAOT,GAAR,OAChB,yBAAKC,IAAKD,EAAGhF,UAAU,OACnB,kBAAC,IAAMD,SAAP,KACI,0BAAMC,UAAU,qBACXyF,EAAMlG,MAEX,0BAAMS,UAAU,cAAhB,IACMoB,EAAWqE,EAAM3E,MADvB,KAGC2E,EAAM1H,SACH,8BACK,IADL,WAEY,8BAAO0H,EAAM1H,SACpB,KAGR0C,EAAOgF,EAAMC,aAAa,IAE9BD,EAAME,YACH,yBAAK3F,UAAU,wBACX,2BAAOA,UAAU,qCACb,kCACI,yBAAK4F,MAAM,QACX,yBAAKA,MAAM,SAEf,+BACI,wBAAI5F,UAAU,iBACV,wBACIsC,MAAO,CACHuD,oBAAqB,QAF7B,QAOA,wBACIvD,MAAO,CACHwD,qBAAsB,QAF9B,iBASR,+BACKL,EAAME,WAAW5G,KAAI,SAACgH,EAAUf,GAAX,OAClB,wBAAIC,IAAKD,GACL,4BACI,yBAAKhF,UAAU,oCACV+F,EAASxG,MAGd,0BAAMS,UAAU,0CACXoB,EACG2E,EAASjF,OAIhBiF,EAAShI,SACN,yBAAKiC,UAAU,6BAAf,WACa,IACT,8BAEQ+F,EAAShI,WAM7B,wBACIuE,MAAO,CACH0D,UAAW,eAGdvF,EACGsF,EAASL,aACT,qB,mFAhFhBlG,IAAMC,W,grDCAzBwG,G,qZACjB,WACI,IAAQrG,EAAYD,KAAKxB,MAAjByB,QACR,OACI,kBAAC,GAAD,IAAgB0D,MAAM,cAAiB3D,KAAKxB,OACvCyB,EAAQ+F,WAAW5G,KAAI,SAACgH,EAAUf,GAAX,OACpB,yBAAKC,IAAKD,EAAGhF,UAAU,OACnB,0BAAMA,UAAU,yBACX+F,EAASxG,MAEd,0BAAMS,UAAU,cAAhB,IACMoB,EAAW2E,EAASjF,MAD1B,KAGCiF,EAAShI,SACN,8BACK,IADL,WAEY,8BAAOgI,EAAShI,SACvB,KAGRgI,EAASL,aACN,mCAASjF,EAAOsF,EAASL,aAAa,IAEzCK,EAASJ,YACN,4BACKI,EAASJ,WAAW5G,KAAI,SAACgH,EAAUf,GAAX,OACrB,wBAAIC,IAAKD,GACL,8BAAOe,EAASxG,MAAa,IAC5B6B,EAAW2E,EAASjF,MACpBiF,EAAShI,SACN,8BACK,IADL,UAEY,IACR,8BAAOgI,EAAShI,SACf,KAGR0C,EAAOsF,EAASL,4B,mFArCjBlG,IAAMC,W,grDCAzByG,G,qZACjB,WAAU,IAAD,OAEL,OADoBvG,KAAKxB,MAAjByB,QACOuG,QAAQpH,KAAI,SAACwF,EAAMS,GAAP,OACvB,kBAAC,GAAD,IAAgBC,IAAKD,EAAG1B,MAAM,WAAc,EAAKnF,OAC7C,8BAAOiD,EAAWmD,EAAKzD,OACtByD,EAAKmB,aACF,mCAASjF,EAAO8D,EAAKmB,aAAa,a,mFAPjBlG,IAAMC,W,grDCAtB2G,G,qZACjB,WACI,IAAQxG,EAAYD,KAAKxB,MAAjByB,QACR,OACI,kBAAC,GAAD,IAAgB0D,MAAM,UAAa3D,KAAKxB,OACpC,4BACKyB,EAAQyG,OAAOtH,KAAI,SAACsH,EAAQrB,GAAT,OAChB,wBAAIC,IAAKD,GACJ5D,EAAWiF,EAAOvF,MADvB,IAC+B,IAC1BL,EAAO4F,EAAOX,aAAa,c,mFATpBlG,IAAMC,W,6rDCCrB6G,G,qZACjB,WACI,IAAQ1G,EAAYD,KAAKxB,MAAjByB,QACR,OACI,kBAAC,GAAD,IAAgB0D,MAAM,WAAc3D,KAAKxB,OACpCyB,EAAQ2G,SAASxH,KAAI,SAACyH,EAASxB,GAAV,OAClB,yBAAKC,IAAKD,EAAGhF,UAAU,oBAClBwG,EAAQC,SAAW,2BAAIhG,EAAO+F,EAAQC,UACvC,kBAAC,WAAD,CAAUC,KAAK,cACVF,EAAQd,uB,mFATClG,IAAMC,W,grDCDvBkH,G,qZACjB,WACI,IAAQ/G,EAAYD,KAAKxB,MAAjByB,QACR,OACI,kBAAC,GAAD,IAAgB0D,MAAM,WAAc3D,KAAKxB,OACrC,4BACKyB,EAAQgH,KAAK7H,KAAI,SAAC8H,EAAK7B,GAAN,OACd,wBAAIC,IAAKD,GAAIvE,EAAOoG,EAAInB,aAAa,c,mFAPxBlG,IAAMC,WCL5B,SAASqH,GAAMlD,GAC1B,OAAQA,GAA8B,IAAnBA,EAAQ/C,O,28CCsHhBkG,G,qZAxGX,WAAU,IAAD,OACCnH,EAAUD,KAAKxB,MACf6I,EAAc,SAACpD,EAASN,GAAV,OACfwD,GAAMlD,IACH,kBAAC,GAAD,CACI/D,aAAc,EAAK1B,MAAM0B,aACzBD,QAASA,EACT0D,MAAOA,EACPM,QAASA,KAIrB,OACI,kBAAC,IAAM7D,SAAP,KACKU,EAAOb,EAAQ8F,cAEdoB,GAAMlH,EAAQuF,WACZ,kBAAC,GAAD,CACItF,aAAcF,KAAKxB,MAAM0B,aACzBD,QAASA,IAIC,UAAjBA,EAAQ8C,OACJ9C,EAAQqH,aACPrH,EAAQsH,oBACgC,YAAtCtH,EAAQsH,mBAAmBC,SAC3B,kBAAC,GAAD,CACItH,aAAcF,KAAKxB,MAAM0B,aACzBD,QAASA,KAInBkH,GAAMlH,EAAQ4F,UACM,UAAjB5F,EAAQ8C,OACJ9C,EAAQsH,oBAC6B,YAAtCtH,EAAQsH,mBAAmBC,SAC3B,kBAAC,GAAD,CACItH,aAAcF,KAAKxB,MAAM0B,aACzBD,QAASA,KAInBkH,GAAMlH,EAAQ+F,aACZ,kBAAC,GAAD,CACI9F,aAAcF,KAAKxB,MAAM0B,aACzBD,QAASA,IAIhBA,EAAQuG,SACL,kBAAC,GAAD,CACItG,aAAcF,KAAKxB,MAAM0B,aACzBD,QAASA,KAIfkH,GAAMlH,EAAQyG,SACZ,kBAAC,GAAD,CACIxG,aAAcF,KAAKxB,MAAM0B,aACzBD,QAASA,KAIfkH,GAAMlH,EAAQ2G,WACZ,kBAAC,GAAD,CACI1G,aAAcF,KAAKxB,MAAM0B,aACzBD,QAASA,IAIhBoH,EAAYpH,EAAQgE,QAAQwD,OAAQ,kBACpCJ,EAAYpH,EAAQgE,QAAQyD,SAAU,oBACtCL,EAAYpH,EAAQgE,QAAQ0D,OAAQ,WAEnCR,GAAMlH,EAAQgH,OACZ,kBAAC,GAAD,CACI/G,aAAcF,KAAKxB,MAAM0B,aACzBD,QAASA,U,mFA/EHJ,IAAMC,W,grDCqBrB8H,G,qZA5BX,WACI,IAAM3H,EAAUD,KAAKxB,MACrB,OACI,kBAAC,GAAD,CACI0B,aAAcD,EAAQC,aACtB0D,gBACK3D,EAAQkD,QACL,kBAAC,EAAD,CACIjD,aAAcD,EAAQC,aACtBD,QAASA,KAKrB,kBAAC,GAAD,MACQD,KAAKxB,MADb,CAEI0B,aAAcD,EAAQC,aAAe,W,mFAjBnCL,IAAMC,W,krECC5B,IAAM+H,GAAiB1J,EAAQ,QAEV2J,G,uMACHD,GAAe,EAAKrJ,MAAMoB,O,oBAC/B,EAAKmI,cAAc,GAAG9D,QAAQwD,Q,8BACrB,WAClB,IAAM1B,EAAc,EAAKgC,cAAc,GAAGhC,cAAe,EACzD,GAAIA,EAAa,OAAOjF,EAAOiF,M,wBAEnB,WAKZ,OAA6B,IAAzB,EAAK9E,SAASC,OACT,kBAAC,GAAD,MAAmB,EAAKD,SAAS,GAAQ,EAAKzC,QAEhD,EAAKyC,SAAS7B,KAAI,SAAC4I,GAAD,OACvB,kBAAC,GAAD,IAAS1C,IAAK0C,EAAMpI,MAAU,EAAKpB,MAAWwJ,U,mCAIlD,WACE,OACE,kBAAC,IAAM5H,SAAP,KACGJ,KAAKiI,oBACLjI,KAAKkI,mB,GAxB4BrI,IAAMC,WAmC1CqI,G,wHACJ,WACE,IAAMH,EAAQhI,KAAKxB,MACnB,OACE,kBAAC,IAAM4B,SAAP,KACE,yBAAKC,UAAU,QACb,kBAAC,GAAD,IAASH,aAAc,GAAO8H,U,GANlBnI,IAAMC,WAkBtBsI,G,wHACJ,WACE,IAAMJ,EAAQhI,KAAKxB,MACnB,OACE,kBAAC,IAAM4B,SAAP,KACE,yBAAKC,UAAU,QACb,kBAAC,GAAD,MAAqB2H,EAArB,CAA4B9H,aAAc,W,GANxBL,IAAMC,W,28CCzDbuI,G,qZACjB,WAEI,OADArI,KAAKxB,MAAM8J,YAAYC,cAAe,EAElC,kBAAC,UAAcvI,KAAKxB,MAChB,yBAAK6B,UAAU,cACX,kBAAC,GAAD,CACIT,KAAMI,KAAKxB,MAAMoB,MAAQI,KAAKxB,MAAM8J,YAAY3E,MAChDnB,SAAUxC,KAAKxB,MAAMgE,kB,mFARZ3C,IAAMC,Y,mjDCUlB5B,E,kZACnB,WACE,OAAO,kBAAC,IAAgB8B,KAAKxB,Y,iFAFCqB,IAAMC,Y,slDCTnB0I,E,kZACjB,WACI,IAAMC,EAAY,CACdC,KAAM,kBAAMC,iBACZC,OAAQ,kBAAMD,iBACdE,WAAY,kBAAMC,iBAEtB,OACI,kBAAC,IAAD,CACIC,UAAW,IACXC,KAAMhJ,KAAKxB,MAAMyC,SACjBgI,YAAaR,EAAUzI,KAAKxB,MAAMuI,a,iFAXZlH,IAAMC","file":"unl-map-js-docs-api-handlers-6646f2b1f509376d87e0.chunk.js","sourcesContent":["\n      let Page = require('/Users/bogdan.simon/Work/UnlMapJsDocs/docs/pages/api/handlers.js');\n      Page = Page.default || Page;\n      module.exports = {\n        component: Page,\n        props: {\n  \"frontMatter\": {\n    \"title\": \"User interaction handlers\",\n    \"description\": \"Use handlers to add different kinds of interactivity to the map such as mouse interactivity, touch interactions, and other gestures.\",\n    \"contentType\": \"API\",\n    \"order\": 6,\n    \"layout\": \"page\",\n    \"language\": [\n      \"JavaScript\"\n    ],\n    \"products\": [\n      \"Unl Map Js\"\n    ]\n  }\n}\n      };\n    ","const { findPage } = require(\"./find-page\");\nconst GithubSlugger = require(\"github-slugger\");\n\nfunction linker(namespace) {\n  const page = findPage(namespace);\n  const path = page ? `/unl-map-js-docs/api/${page}/` : \"\";\n  if (namespace.indexOf(\".\") > -1) {\n    return `${path}#${namespace.toLowerCase()}`;\n  } else {\n    const slugger = new GithubSlugger();\n    const names = namespace.split(\"#\");\n    const nv = names.map((v) => `#${slugger.slug(v)}`).join(\"\");\n    return `${path}${nv}`;\n  }\n}\n\nmodule.exports = {\n  linker,\n};\n","const docs = require('../components/api.json');\n\nmodule.exports = (pageName) => docs.filter((doc) => doc.name === pageName);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconText from '@mapbox/mr-ui/icon-text';\n\nexport default class GitHub extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            section.context &&\n            section.context.github && (\n                <a\n                    className=\"link--gray unprose block mt-neg12 txt-mono mb18\"\n                    href={section.context.github.url}\n                >\n                    <IconText iconBefore=\"github\">\n                        {section.context.github.path}\n                    </IconText>\n                </a>\n            )\n        );\n    }\n}\n\nGitHub.propTypes = {\n    section: PropTypes.shape({\n        context: PropTypes.shape({\n            github: PropTypes.shape({\n                url: PropTypes.string,\n                path: PropTypes.string\n            })\n        })\n    })\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Github from \"./github\";\n\nexport default class SectionHeading extends React.Component {\n  render() {\n    const { section, headingLevel } = this.props;\n    const HeadingLevel = `h${headingLevel}`;\n    return (\n      <React.Fragment>\n        <HeadingLevel\n          className=\"mt36 mb18 txt-xl unprose anchor\"\n          id={section.namespace.toLowerCase()}\n        >\n          <a\n            className=\"unprose color-blue-on-hover\"\n            href={`#${section.namespace.toLowerCase()}`}\n          >\n            {section.name}\n          </a>\n        </HeadingLevel>\n      </React.Fragment>\n    );\n  }\n}\n\nSectionHeading.propTypes = {\n  headingLevel: PropTypes.number,\n  section: PropTypes.shape({\n    namespace: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    context: PropTypes.shape({\n      github: PropTypes.shape({\n        url: PropTypes.string.isRequired,\n        path: PropTypes.string.isRequired,\n      }),\n    }),\n  }).isRequired,\n};\n","import React from 'react';\nimport createFormatters from 'documentation/src/output/util/formatters';\nimport LinkerStack from 'documentation/src/output/util/linker_stack';\n\nimport docs from '../components/api.json';\n\nconst { linker } = require('./linker');\n\nconst linkerStack = new LinkerStack({}).namespaceResolver(docs, (namespace) => {\n    return linker(namespace);\n});\n\nexport const formatters = createFormatters(linkerStack.link);\n\n// convert ast to html\nexport function toHtml(ast, inline) {\n    if (\n        inline &&\n        ast &&\n        ast.children.length &&\n        ast.children[0].type === 'paragraph'\n    ) {\n        ast = {\n            type: 'root',\n            children: ast.children[0].children.concat(ast.children.slice(1))\n        };\n    }\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: `${formatters.markdown(ast)}`\n            }}\n        />\n    );\n}\n\n// format api type into html\nexport function formatType(type) {\n    return (\n        <span\n            dangerouslySetInnerHTML={{ __html: `${formatters.type(type)}` }}\n        />\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatters } from '../../util/formatters';\nimport ApiItem from './item';\nimport Icon from '@mapbox/mr-ui/icon';\nimport classnames from 'classnames';\n\nclass ApiItemMember extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { disclosed: false };\n        this.hashChange = this.hashChange.bind(this);\n    }\n\n    href = (m) => `#${m.namespace.toLowerCase()}`;\n\n    render() {\n        const member = this.props;\n\n        const HeadingLevel = `h${this.props.headingLevel}`;\n        return (\n            <div\n                className=\"scroll-margin-top my6 border border--gray-light bg-gray-faint round\"\n                id={member.namespace.toLowerCase()}\n                aria-expanded={this.state.disclosed}\n            >\n                <React.Fragment>\n                    <button\n                        className={classnames(\n                            'cursor-pointer w-full color-blue-on-hover px12 py6',\n                            {\n                                'txt-bold': this.state.disclosed\n                            }\n                        )}\n                        onClick={(e) => {\n                            this.setState({ disclosed: !this.state.disclosed });\n                            if (history.pushState) {\n                                history.pushState(\n                                    null,\n                                    null,\n                                    this.href(member)\n                                );\n                            } else {\n                                location.hash = this.href(member);\n                            }\n\n                            e.preventDefault();\n                        }}\n                    >\n                        <HeadingLevel\n                            style={{\n                                fontSize: '13px',\n                                lineHeight: '24px',\n                                fontWeight: 'inherit'\n                            }}\n                            className=\"txt-mono truncate mb0 pt0 inline-block\"\n                        >\n                            {member.name}\n                        </HeadingLevel>\n                        {member.kind === 'function' && (\n                            <span\n                                className=\"txt-mono\"\n                                style={{\n                                    color: '#54718f' /* a11y color-gray */\n                                }}\n                                dangerouslySetInnerHTML={{\n                                    __html: `${formatters.parameters(\n                                        member,\n                                        true\n                                    )}`\n                                }}\n                            />\n                        )}\n                        <div className=\"fr\">\n                            <Icon\n                                size={30}\n                                name={\n                                    this.state.disclosed\n                                        ? 'caret-down'\n                                        : 'caret-right'\n                                }\n                                inline={true}\n                            />\n                        </div>\n                    </button>\n                </React.Fragment>\n\n                {this.state.disclosed && (\n                    <div className=\"pt12 pb18 px12 border-t border--gray-light round-b item-member bg-white\">\n                        <ApiItem\n                            nested={true}\n                            location={this.props.location}\n                            {...member}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    hashChange() {\n        if (window.location.hash === this.href(this.props)) {\n            this.setState({ disclosed: true });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.closeAll !== this.props.closeAll) {\n            if (this.props.closeAll && this.state.disclosed) {\n                this.setState({ disclosed: false });\n            }\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('hashchange', this.hashChange);\n        this.hashChange();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('hashchange', this.hashChange);\n    }\n}\n\nApiItemMember.propTypes = {\n    namespace: PropTypes.string,\n    name: PropTypes.string,\n    kind: PropTypes.string,\n    location: PropTypes.object,\n    closeAll: PropTypes.bool,\n    headingLevel: PropTypes.number\n};\n\nexport default ApiItemMember;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport slug from 'slugg';\n\nexport default class Title extends React.Component {\n    render() {\n        const { children, section, headingLevel } = this.props;\n        const pageName =\n            section && section.name === 'Map class' ? 'Map' : section.name;\n        const id = slug(`${pageName || ''} ${children}`);\n        const HeadingLevel = `h${headingLevel}`;\n\n        return (\n            <HeadingLevel id={id} className=\"unprose txt-m mt24 mb3 anchor\">\n                <a\n                    className=\"unprose block color-blue-on-hover txt-bold\"\n                    href={`#${id}`}\n                >\n                    {children}\n                </a>\n            </HeadingLevel>\n        );\n    }\n}\n\nTitle.propTypes = {\n    children: PropTypes.node.isRequired,\n    section: PropTypes.shape({\n        name: PropTypes.string\n    }),\n    headingLevel: PropTypes.number\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Title from './title';\n\nexport default class SectionWrapper extends React.Component {\n    render() {\n        const {\n            children,\n            headingLevel,\n            section,\n            title,\n            titleComponent\n        } = this.props;\n        return (\n            <React.Fragment>\n                {title && (\n                    <Title headingLevel={headingLevel} section={section}>\n                        {title}\n                    </Title>\n                )}\n                {titleComponent ? titleComponent : ''}\n                {children}\n            </React.Fragment>\n        );\n    }\n}\n\nSectionWrapper.propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string,\n    titleComponent: PropTypes.node,\n    section: PropTypes.object,\n    headingLevel: PropTypes.number\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ApiItemMember from './item-member';\nimport SectionWrapper from './section-wrapper';\nimport ControlText from '@mapbox/mr-ui/control-text';\nimport { searchMembers } from '../../util/search-members';\nimport slug from 'slugg';\n\nexport default class MembersList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { filter: '', closeAll: false };\n    }\n\n    // close all item members so it's easier to read them\n    filterMembers = (value) => {\n        this.setState({ filter: value, closeAll: true }, () => {\n            this.setState({ closeAll: false });\n        });\n        this.clearHash();\n    };\n\n    // clear hash from window location\n    clearHash = () => {\n        if (history.pushState && window) {\n            history.pushState(null, null, window.location.pathname);\n        }\n    };\n\n    render() {\n        const { title, members } = this.props;\n        const { filter } = this.state;\n        const filteredMembers = filter\n            ? searchMembers(members, filter)\n            : members;\n\n        return (\n            <SectionWrapper title={title} {...this.props}>\n                {members.length > 9 && (\n                    <div className=\"relative\">\n                        <div className=\"absolute flex-parent flex-parent--center-cross flex-parent--center-main w36 h36 color-gray\">\n                            <svg className=\"icon\">\n                                <use xlinkHref=\"#icon-search\"></use>\n                            </svg>\n                        </div>\n                        <ControlText\n                            themeControlInput=\"input pl36\"\n                            id={`filter-${slug(this.props.section.name)}-${slug(\n                                title\n                            )}`}\n                            themeLabel=\"hide-visually\"\n                            label={`Search ${title}`}\n                            placeholder={`Search ${title}`}\n                            onChange={this.filterMembers}\n                            value={filter}\n                        />\n                    </div>\n                )}\n                {filter && (\n                    <div className=\"txt-s color-gray mt3\">\n                        Found {filteredMembers.length} {title} for{' '}\n                        <code>{filter}</code>\n                        <button\n                            className=\"btn btn--stroke btn--s btn--gray ml6\"\n                            onClick={() => this.filterMembers('')}\n                        >\n                            Clear filter\n                        </button>\n                    </div>\n                )}\n\n                {filteredMembers.map((member, i) => (\n                    <ApiItemMember\n                        closeAll={this.state.closeAll}\n                        {...this.props}\n                        key={i}\n                        {...member}\n                        headingLevel={this.props.headingLevel + 1} // increase heading level\n                    />\n                ))}\n            </SectionWrapper>\n        );\n    }\n}\n\nMembersList.propTypes = {\n    title: PropTypes.string.isRequired,\n    members: PropTypes.array.isRequired,\n    section: PropTypes.object.isRequired,\n    headingLevel: PropTypes.number\n};\n","import Fuse from 'fuse.js'; // https://fusejs.io/\n\n// check string values in an array of objects for \"search\" term\nexport function searchMembers(arr, search) {\n    if (!search || !arr || !Array.isArray(arr)) return [];\n    const fuse = new Fuse(arr, {\n        keys: ['name', 'description.children.children.value'], // keys to perform search on\n        threshold: 0.3 // slightly stricter\n    });\n    return fuse.search(search)\n        ? fuse.search(search).map((result) => result.item)\n        : [];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatters } from '../../util/formatters';\n\nexport default class Augments extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <div className=\"mt12\">\n                Extends{' '}\n                {section.augments.map((tag, i) => (\n                    <span\n                        key={i}\n                        dangerouslySetInnerHTML={{\n                            __html: `${formatters.autolink(tag.name)}`\n                        }}\n                    />\n                ))}\n                .\n            </div>\n        );\n    }\n}\n\nAugments.propTypes = {\n    section: PropTypes.shape({\n        augments: PropTypes.array.isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatters } from '../../util/formatters';\n\nexport default class ClassName extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <div\n                className=\"txt-code my18 py12 px12 txt-s\"\n                dangerouslySetInnerHTML={{\n                    __html: `<span class=\"token keyword\">new</span> <span class=\"token class-name\">${\n                        section.name\n                    }</span>${formatters.parameters(section)}`\n                }}\n            />\n        );\n    }\n}\n\nClassName.propTypes = {\n    section: PropTypes.shape({\n        name: PropTypes.string.isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml, formatType } from '../../util/formatters';\n\nexport default class Parameters extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <SectionWrapper title=\"Parameters\" {...this.props}>\n                {section.params.map((param, i) => (\n                    <div key={i} className=\"mb6\">\n                        <React.Fragment>\n                            <span className=\"txt-mono txt-bold\">\n                                {param.name}\n                            </span>\n                            <code className=\"color-gray\">\n                                ({formatType(param.type)})\n                            </code>\n                            {param.default && (\n                                <span>\n                                    {'('}\n                                    default <code>{param.default}</code>\n                                    {')'}\n                                </span>\n                            )}\n                            {toHtml(param.description, true)}\n                        </React.Fragment>\n                        {param.properties && (\n                            <div className=\"mt6 mb12 scroll-auto\">\n                                <table className=\"table table--fixed table--compact\">\n                                    <colgroup>\n                                        <col width=\"30%\" />\n                                        <col width=\"70%\" />\n                                    </colgroup>\n                                    <thead>\n                                        <tr className=\"bg-gray-faint\">\n                                            <th\n                                                style={{\n                                                    borderTopLeftRadius: '4px'\n                                                }}\n                                            >\n                                                Name\n                                            </th>\n                                            <th\n                                                style={{\n                                                    borderTopRightRadius: '4px'\n                                                }}\n                                            >\n                                                Description\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {param.properties.map((property, i) => (\n                                            <tr key={i}>\n                                                <td>\n                                                    <div className=\"txt-mono txt-bold txt-break-word\">\n                                                        {property.name}\n                                                    </div>\n\n                                                    <code className=\"inline-block color-gray txt-break-word\">\n                                                        {formatType(\n                                                            property.type\n                                                        )}\n                                                    </code>\n\n                                                    {property.default && (\n                                                        <div className=\"color-gray txt-break-word\">\n                                                            default:{' '}\n                                                            <code>\n                                                                {\n                                                                    property.default\n                                                                }\n                                                            </code>\n                                                        </div>\n                                                    )}\n                                                </td>\n                                                <td\n                                                    style={{\n                                                        wordBreak: 'break-word'\n                                                    }}\n                                                >\n                                                    {toHtml(\n                                                        property.description,\n                                                        true\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        )}\n                    </div>\n                ))}\n            </SectionWrapper>\n        );\n    }\n}\n\nParameters.propTypes = {\n    section: PropTypes.shape({\n        params: PropTypes.array.isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml, formatType } from '../../util/formatters';\n\nexport default class Properties extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <SectionWrapper title=\"Properties\" {...this.props}>\n                {section.properties.map((property, i) => (\n                    <div key={i} className=\"mb6\">\n                        <span className=\"txt-mono txt-bold mr6\">\n                            {property.name}\n                        </span>\n                        <code className=\"color-gray\">\n                            ({formatType(property.type)})\n                        </code>\n                        {property.default && (\n                            <span>\n                                {'('}\n                                default <code>{property.default}</code>\n                                {')'}\n                            </span>\n                        )}\n                        {property.description && (\n                            <span>: {toHtml(property.description, true)}</span>\n                        )}\n                        {property.properties && (\n                            <ul>\n                                {property.properties.map((property, i) => (\n                                    <li key={i}>\n                                        <code>{property.name}</code>{' '}\n                                        {formatType(property.type)}\n                                        {property.default && (\n                                            <span>\n                                                {'('}\n                                                default{' '}\n                                                <code>{property.default}</code>\n                                                {')'}\n                                            </span>\n                                        )}\n                                        {toHtml(property.description)}\n                                    </li>\n                                ))}\n                            </ul>\n                        )}\n                    </div>\n                ))}\n            </SectionWrapper>\n        );\n    }\n}\n\nProperties.propTypes = {\n    section: PropTypes.shape({\n        properties: PropTypes.array.isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml, formatType } from '../../util/formatters';\n\nexport default class Returns extends React.Component {\n    render() {\n        const { section } = this.props;\n        return section.returns.map((item, i) => (\n            <SectionWrapper key={i} title=\"Returns\" {...this.props}>\n                <code>{formatType(item.type)}</code>\n                {item.description && (\n                    <span>: {toHtml(item.description, true)}</span>\n                )}\n            </SectionWrapper>\n        ));\n    }\n}\n\nReturns.propTypes = {\n    section: PropTypes.shape({\n        returns: PropTypes.array.isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml, formatType } from '../../util/formatters';\n\nexport default class Throws extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <SectionWrapper title=\"Throws\" {...this.props}>\n                <ul>\n                    {section.throws.map((throws, i) => (\n                        <li key={i}>\n                            {formatType(throws.type)}:{' '}\n                            {toHtml(throws.description, true)}\n                        </li>\n                    ))}\n                </ul>\n            </SectionWrapper>\n        );\n    }\n}\n\nThrows.propTypes = {\n    section: PropTypes.shape({\n        throws: PropTypes.array\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Copyable from '../../components/copyable.js';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml } from '../../util/formatters';\n\nexport default class Examples extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <SectionWrapper title=\"Example\" {...this.props}>\n                {section.examples.map((example, i) => (\n                    <div key={i} className=\"mb12 api-example\">\n                        {example.caption && <p>{toHtml(example.caption)}</p>}\n                        <Copyable lang=\"javascript\">\n                            {example.description}\n                        </Copyable>\n                    </div>\n                ))}\n            </SectionWrapper>\n        );\n    }\n}\n\nExamples.propTypes = {\n    section: PropTypes.shape({\n        examples: PropTypes.arrayOf(\n            PropTypes.shape({\n                caption: PropTypes.string,\n                description: PropTypes.string.isRequired\n            })\n        ).isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml } from '../../util/formatters';\n\nexport default class Related extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <SectionWrapper title=\"Related\" {...this.props}>\n                <ul>\n                    {section.sees.map((see, i) => (\n                        <li key={i}>{toHtml(see.description, true)}</li>\n                    ))}\n                </ul>\n            </SectionWrapper>\n        );\n    }\n}\n\nRelated.propTypes = {\n    section: PropTypes.shape({\n        sees: PropTypes.array.isRequired\n    }).isRequired\n};\n","export default function empty(members) {\n    return !members || members.length === 0;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MembersList from './members-list';\nimport Augments from './augments';\nimport ClassName from './class-name';\nimport Parameters from './parameters';\nimport Properties from './properties';\nimport Returns from './returns';\nimport Throws from './throws';\nimport Examples from './examples';\nimport Related from './related';\nimport { toHtml } from '../../util/formatters';\nimport empty from '../../util/empty';\n\nclass ApiItemContents extends React.Component {\n    render() {\n        const section = this.props;\n        const membersList = (members, title) =>\n            !empty(members) && (\n                <MembersList\n                    headingLevel={this.props.headingLevel}\n                    section={section}\n                    title={title}\n                    members={members}\n                />\n            );\n\n        return (\n            <React.Fragment>\n                {toHtml(section.description)}\n\n                {!empty(section.augments) && (\n                    <Augments\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n\n                {section.kind === 'class' &&\n                    !section.interface &&\n                    (!section.constructorComment ||\n                        section.constructorComment.access !== 'private') && (\n                        <ClassName\n                            headingLevel={this.props.headingLevel}\n                            section={section}\n                        />\n                    )}\n\n                {!empty(section.params) &&\n                    (section.kind !== 'class' ||\n                        !section.constructorComment ||\n                        section.constructorComment.access !== 'private') && (\n                        <Parameters\n                            headingLevel={this.props.headingLevel}\n                            section={section}\n                        />\n                    )}\n\n                {!empty(section.properties) && (\n                    <Properties\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n\n                {section.returns && (\n                    <Returns\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n\n                {!empty(section.throws) && (\n                    <Throws\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n\n                {!empty(section.examples) && (\n                    <Examples\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n\n                {membersList(section.members.static, 'Static Members')}\n                {membersList(section.members.instance, 'Instance Members')}\n                {membersList(section.members.events, 'Events')}\n\n                {!empty(section.sees) && (\n                    <Related\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nApiItemContents.propTypes = {\n    augments: PropTypes.array,\n    kind: PropTypes.string,\n    constructorComment: PropTypes.shape({\n        access: PropTypes.string\n    }),\n    description: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    interface: PropTypes.string,\n    params: PropTypes.array,\n    properties: PropTypes.array,\n    returns: PropTypes.array,\n    throws: PropTypes.array,\n    examples: PropTypes.array,\n    members: PropTypes.object,\n    sees: PropTypes.array,\n    headingLevel: PropTypes.number\n};\n\nexport default ApiItemContents;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionHeading from './section-heading';\nimport ApiItemContents from './item-contents';\nimport SectionWrapper from './section-wrapper';\n\nclass ApiItem extends React.Component {\n    render() {\n        const section = this.props;\n        return (\n            <SectionWrapper\n                headingLevel={section.headingLevel}\n                titleComponent={\n                    !section.nested && (\n                        <SectionHeading\n                            headingLevel={section.headingLevel}\n                            section={section}\n                        />\n                    )\n                }\n            >\n                <ApiItemContents\n                    {...this.props}\n                    headingLevel={section.headingLevel + 1} // increment heading level to maintain hierarchy on subordinate items\n                />\n            </SectionWrapper>\n        );\n    }\n}\n\nApiItem.propTypes = {\n    nested: PropTypes.bool,\n    headingLevel: PropTypes.number.isRequired\n};\n\nexport default ApiItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ApiItem from \"./item\";\nimport ApiItemContents from \"./item-contents\";\nimport Github from \"./github\";\nimport { toHtml } from \"../../util/formatters\";\n\nconst apiFilterItems = require(\"../../util/api-filter-items.js\");\n\nexport default class ApiPageItems extends React.Component {\n  pageDocSource = apiFilterItems(this.props.name);\n  children = this.pageDocSource[0].members.static;\n  renderDescription = () => {\n    const description = this.pageDocSource[0].description || false;\n    if (description) return toHtml(description);\n  };\n  renderItems = () => {\n    // There are 2 layouts based on the content:\n    // 1. `SingleSection` (for Maps page)\n    // 2. `Section` (for all other pages)\n\n    if (this.children.length === 1) {\n      return <SingleSection {...this.children[0]} {...this.props} />;\n    }\n    return this.children.map((child) => (\n      <Section key={child.name} {...this.props} {...child} />\n    ));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderDescription()}\n        {this.renderItems()}\n      </React.Fragment>\n    );\n  }\n}\n\nApiPageItems.propTypes = {\n  name: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nclass Section extends React.Component {\n  render() {\n    const child = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"mb18\">\n          <ApiItem headingLevel={2} {...child} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nclass SingleSection extends React.Component {\n  render() {\n    const child = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"mb18\">\n          <ApiItemContents {...child} headingLevel={2} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nSingleSection.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageShell from '../page-shell';\nimport ApiPageItems from './api-page-items.js';\n\nexport default class Api extends React.Component {\n    render() {\n        this.props.frontMatter.hideFeedback = true;\n        return (\n            <PageShell {...this.props}>\n                <div className=\"prose mb18\">\n                    <ApiPageItems\n                        name={this.props.name || this.props.frontMatter.title}\n                        location={this.props.location}\n                    />\n                </div>\n            </PageShell>\n        );\n    }\n}\n\nApi.propTypes = {\n    frontMatter: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        hideFeedback: PropTypes.bool\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n    name: PropTypes.string // when the documentation.yml `name` doesn't match the page's title, use this prop to define the documentation.yml `name`\n};\n","/*---\ntitle: User interaction handlers\ndescription: Use handlers to add different kinds of interactivity to the map such as mouse interactivity, touch interactions, and other gestures.\ncontentType: API\norder: 6\nlayout: page\nlanguage:\n- JavaScript\nproducts:\n- Unl Map Js\n---*/\n\nimport React from \"react\";\nimport PageWrapper from \"../../components/api/page-wrapper.js\";\n\nexport default class Page extends React.Component {\n  render() {\n    return <PageWrapper {...this.props} />;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodeSnippet from '@mapbox/dr-ui/code-snippet';\nimport { highlightHtml } from '@mapbox/dr-ui/highlight/html';\nimport { highlightJsx } from '@mapbox/dr-ui/highlight/jsx';\n\nexport default class Copyable extends React.Component {\n    render() {\n        const highlight = {\n            html: () => highlightHtml,\n            markup: () => highlightHtml,\n            javascript: () => highlightJsx\n        };\n        return (\n            <CodeSnippet\n                maxHeight={300}\n                code={this.props.children}\n                highlighter={highlight[this.props.lang]}\n            />\n        );\n    }\n}\n\nCopyable.propTypes = {\n    children: PropTypes.node,\n    lang: PropTypes.oneOf(['html', 'markup', 'javascript'])\n};\n"],"sourceRoot":""}